{"version":3,"sources":["KeyTerm.js","VideoPicker.js","Player.js","App.js","index.js"],"names":["KeyTerm","props","countryList","require","getAllCountries","term","ListItem","FormControl","InputLabel","id","Select","labelId","onChange","termFunction","defaultValue","map","country","MenuItem","value","toUpperCase","substring","name","VideoPicker","getLink","object","url","items","Math","floor","random","videoId","console","log","setUrl","Button","onClick","fetch","type","length","then","res","json","obj","Player","className","height","width","loop","controls","playing","useStyles","makeStyles","theme","drawerPaper","alignItems","backdropFilter","App","useState","setLength","setType","setTerm","classes","list","List","style","display","flexDirection","event","target","Divider","newTerm","Drawer","drawer","variant","anchor","BackdropProps","backgroundColor","paper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f0d82da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function KeyTerm(props) {\r\n    const wcc = require(\"world-countries-capitals\");\r\n\r\n    let countryList = wcc.getAllCountries();\r\n    let genre = [\"Lo-Fi\", \"Classical music\", \"Jazz\", \"Ambient\"]\r\n\r\n    if (props.term === \"Drive 4k\") {\r\n        return (\r\n            <>\r\n                <ListItem>\r\n                    <FormControl>\r\n                        <InputLabel id=\"Countries\">Countries</InputLabel>\r\n                        <Select\r\n                        labelId=\"Countries\"\r\n                        id=\"Countries\"\r\n                        onChange={props.termFunction}\r\n                        defaultValue={\"canada\"}\r\n                        >\r\n                        {countryList.map((country) => (\r\n                            <MenuItem key={country} value={country}>{country[0].toUpperCase() + country.substring(1)}</MenuItem>\r\n                        ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </ListItem>\r\n            </>\r\n        );\r\n    } else if (props.term === \"Music\") {\r\n        return (\r\n            <>\r\n            <ListItem>\r\n                        <FormControl>\r\n                            <InputLabel id=\"Genre\">Music Genre</InputLabel>\r\n                            <Select\r\n                            labelId=\"Genre\"\r\n                            id=\"Genre\"\r\n                            onChange={props.termFunction}\r\n                            defaultValue={\"Lo-Fi\"}\r\n                            >\r\n                            {genre.map((name) => (\r\n                                <MenuItem key={name} value={name}>{name}</MenuItem>\r\n                            ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ListItem>\r\n            </>\r\n        )\r\n    } else {\r\n        return(\r\n            <>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n//AIzaSyCQHQ8-OJh9tNIRxLd21QTiEcdy295gXK0\r\n//AIzaSyA6wruY8sNsnhYoOz25AVDHnL_uiagFXXU\r\n\r\nexport default function VideoPicker(props) {\r\n\r\n    function randomPicker() {\r\n    var x = Math.floor((Math.random() * 15) + 1);\r\n    return x;\r\n    }\r\n\r\n    function getLink(object) {\r\n        let url = object.items[randomPicker()].id.videoId\r\n        console.log(url)\r\n        props.setUrl(url)\r\n    }\r\n\r\n    function play () {\r\n        fetch(\"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=15&q=\"+ props.type + props.term + \"&key=AIzaSyA6wruY8sNsnhYoOz25AVDHnL_uiagFXXU&videoDuration=\"+ props.length + \"&type=video\")\r\n        .then(function(res) {\r\n            return res.json();\r\n        }).then( function (obj) {\r\n            console.log(obj);\r\n            getLink(obj);\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Button onClick={()=> play()}>Play</Button>\r\n    )\r\n}","import React from 'react'\r\nimport ReactPlayer from 'react-player/youtube'\r\n\r\n// https://www.youtube.com/watch?v=\r\n\r\nexport default function Player(props){\r\n    return (\r\n        <>\r\n        {console.log(\"Player component \" + props.url)}\r\n        {console.log('https:www.youtube.com/'+ props.url)}\r\n        <div className='player-wrapper'>\r\n            <ReactPlayer\r\n                className='react-player'\r\n                url={'https://www.youtube.com/watch?v='+ props.url}\r\n                height='955px'\r\n                width='88.5%'\r\n                loop=\"true\"\r\n                controls=\"true\"\r\n                playing=\"true\"\r\n            />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\nimport KeyTerm from \"./KeyTerm\"\nimport VideoPicker from \"./VideoPicker\"\nimport Player from \"./Player\"\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\n\n// import clsx from \"clsx\";\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n\nimport \"./App.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    width: \"12%\",\n    alignItems: \"center\",\n    backdropFilter: \"blur(8px)\",\n  },\n}));\n\nexport default function App() {\n  const [length, setLength] = useState(\"Long\");\n  const [type, setType] = useState(\"Drive 4k\");\n  const [openDrawer, setOpenDrawer] = useState(true);\n  const [term, setTerm] = useState(\"canada\");\n  const [url, setUrl] = useState(\"\");\n  const classes = useStyles();\n\n\n  const handleTypeChange = (event) => {\n    setType(event.target.value);\n    if(event.target.value === \"Neon\" || event.target.value === \"VisualEffects\") {\n      setTerm(\"\");\n    }\n  };\n\n  const handleLengthChange = (event) => {\n    setLength(event.target.value);\n  };\n\n  function handleTermChange(event){\n    let newTerm = event.target.value;\n    setTerm(newTerm);\n  }\n\n  const list = (\n    <List style={{display:\"flex\", flexDirection:\"column\"}}>\n      <ListItem>\n        <FormControl>\n          <InputLabel id=\"Type\">Type </InputLabel>\n          <Select\n            labelId=\"Type\"\n            id=\"Type\"\n            value={type}\n            onChange={handleTypeChange}\n          >\n            <MenuItem value={\"Drive 4k\"}>Drive</MenuItem>\n            <MenuItem value={\"Music\"}>Music</MenuItem>\n            <MenuItem value={\"VisualEffects\"}>Visual Effects</MenuItem>\n            <MenuItem value={\"Neon\"}>Neon</MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n      <Divider />\n\n      <ListItem>\n        <FormControl>\n          <InputLabel id=\"Length\">Length</InputLabel>\n          <br />\n          <Select\n            labelId=\"Length\"\n            id=\"Length\"\n            value={length}\n            onChange={handleLengthChange}\n          >\n            <MenuItem value={\"any\"}>Any</MenuItem>\n            <MenuItem value={\"Long\"}>Long</MenuItem>\n            <MenuItem value={\"Medium\"}>Medium</MenuItem>\n            <MenuItem value={\"Short\"}>Short</MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n\n      <Divider />\n          <KeyTerm term={type} termFunction={handleTermChange}/>\n      {/* <Button onClick={addValues(Type.value, Length.value)}></Button> */}\n      <VideoPicker type={type} length={length} term={term} setUrl={setUrl}/>\n    </List>\n  );\n\n  return (\n    <>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        anchor=\"right\"\n        BackdropProps={{ style: { backgroundColor: \"transparent\" } }}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        {list}\n      </Drawer>\n      <KeyTerm/>\n      <Player url={url}/>\n    </>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}